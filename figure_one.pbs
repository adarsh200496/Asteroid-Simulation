#PBS -q coc-ice
#PBS -l nodes=1:ppn=24
#PBS -l walltime=01:00:00

# We want as reproducible an environment as possible
module purge
module load git gcc/10.1.0

# clean temporary files
make clean

# Report version
echo "Repository version:"
git rev-parse HEAD

# Check for dirty repository states
UNTRACKED_FILES="$(git ls-files --exclude-standard --others)"
test -z "$UNTRACKED_FILES" || (echo "Untracked files:" && echo $UNTRACKED_FILES)

STAGED_FILES="$(git diff-index --cached HEAD --)"
test -z "$STAGED_FILES" || (echo "!!! Staged files not committed (exiting):" && echo $STAGED_FILES && exit 1) || exit

CHANGED_FILES="$(git diff-files --stat --)"
test -z "$CHANGED_FILES" || (echo "!!! Changed files not committed (exiting):" && echo $CHANGED_FILES && exit 1) || exit

make simulation

OUTPUT_FILE="figure_one_${PBS_JOBID%%.*}.json"
echo "[" > $OUTPUT_FILE

FIRST_ITER="yes"
for inputs in "1000 100000" "1000 200000" "1000 300000" "1000 400000" "1000 500000" "1000 600000" "1000 700000" "1000 800000" "1000 900000" "1000 1000000" "1000 1100000" "1000 1200000" "1000 1300000" "1000 1400000" "1000 1500000" "1000 1600000" "1000 1700000"; do
  if [ "$FIRST_ITER" = "yes" ]; then
    FIRST_ITER="no"
  else
    echo "," >> $OUTPUT_FILE
  fi
  OMP_NUM_THREADS=24 ./simulation float $inputs >> $OUTPUT_FILE
  echo "," >> $OUTPUT_FILE
  OMP_NUM_THREADS=24 ./simulation double $inputs >> $OUTPUT_FILE
done

echo "]" >> $OUTPUT_FILE


